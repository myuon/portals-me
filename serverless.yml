service: portals-me-cfn

plugins:
  - serverless-go-build
  - serverless-appsync-plugin

provider:
  name: aws
  region: ap-northeast-1
  stage: ${opt:stage, 'dev'}
  memorySize: 128
  timeout: 10
  runtime: go1.x

package:
  individually: true

functions:
  authorizer:
    handler: functions/authorizer/main.go
    name: ${self:service}-${self:provider.stage}-authorizer
    environment:
      jwtPrivate: ${ssm:portals-me-account-${self:provider.stage}-jwt-private~true}

custom:
  appSync:
    name: ${self:service}-api
    authenticationType: API_KEY
    schema: schema.graphql
    dataSources:
      - type: AWS_LAMBDA
        name: authorizer
        config:
          functionName: authorizer
          iamRoleStatements:
            - Effect: Allow
              Action: 'lambda:invokeFunction'
              Resource: '*'
      - type: AMAZON_DYNAMODB
        name: collection
        config:
          tableName:
            Ref: collectionTable
          iamRoleStatements:
            - Effect: Allow
              Action:
                - 'dynamodb:*'
              Resource: '*'
    mappingTemplatesLocation: './vtl'
    mappingTemplates:
      - dataSource: collection
        type: Query
        field: getCollection
        request: GetCollection.vtl
        response: JsonResponse.vtl
      - dataSource: collection
        type: Mutation
        field: addCollection
        request: AddCollection.vtl
        response: JsonResponse.vtl
        kind: PIPELINE
        functions:
          - authorizer
      - dataSource: collection
        type: Mutation
        field: updateCollection
        request: UpdateCollection.vtl
        response: JsonResponse.vtl
      - dataSource: collection
        type: Mutation
        field: updateCollectionName
        request: UpdateCollection.vtl
        response: JsonResponse.vtl
      - dataSource: collection
        type: Mutation
        field: deleteCollection
        request: DeleteCollection.vtl
        response: JsonResponse.vtl
    functionConfigurations:
      - dataSource: authorizer
        name: authorizer
        request: AuthorizerRequest.vtl
        response: AuthorizerResponse.vtl
    logConfig:
      loggingRoleArn: arn:aws:iam::941528793676:role/AppSyncToCWLServiceRole
      level: ALL

resources:
  Resources:
    collectionTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:service}-${self:provider.stage}-collection
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: sort-id
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: sort-id
            AttributeType: S
