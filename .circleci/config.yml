version: 2

jobs:
  test:
    docker:
      - image: golang:1.11.5-stretch
    steps:
      - checkout
      - run: apt update
      - run: apt install -y openjdk-8-jdk unzip
      - run: make install
      - run: go get -u github.com/aws/aws-lambda-go/lambda
      - run: go get -u github.com/aws/aws-lambda-go/events
      - run: go get -u github.com/aws/aws-sdk-go-v2
      - run: go get -u github.com/satori/go.uuid
      - run: go get -u github.com/GoogleIdTokenVerifier/GoogleIdTokenVerifier
      - run: go get -u github.com/gbrlsnchs/jwt
      - run: go get -u github.com/gomodule/oauth1/oauth
      - run: go get -u github.com/gofrs/uuid
      - run: go get -u github.com/guregu/dynamo
      - run: go get -u github.com/jmespath/go-jmespath
      - run: wget https://releases.hashicorp.com/terraform/0.11.11/terraform_0.11.11_linux_amd64.zip
      - run: unzip terraform_0.11.11_linux_amd64.zip && cp terraform /usr/local/bin
      - run: cd infrastructure/local && terraform init
      - run: make startTest && make runTest
  build:
    docker:
      - image: node
    steps:
      - checkout
      - run: node env.js prod > env.json
      - run: mkdir -p /tmp/workspace
      - run: cp env.json /tmp/workspace/
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - env.json
  deploy-apex:
    docker: 
      - image: golang:1.11.5-stretch
    steps: 
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: cp /tmp/workspace/env.json ./
      - run: apt-get install -y curl
      - run: curl https://raw.githubusercontent.com/apex/apex/master/install.sh | sh
      - run: go get -u github.com/aws/aws-lambda-go/lambda
      - run: go get -u github.com/aws/aws-lambda-go/events
      - run: go get -u github.com/aws/aws-sdk-go-v2
      - run: go get -u github.com/satori/go.uuid
      - run: go get -u github.com/GoogleIdTokenVerifier/GoogleIdTokenVerifier
      - run: go get -u github.com/gbrlsnchs/jwt
      - run: go get -u github.com/gomodule/oauth1/oauth
      - run: go get -u github.com/gofrs/uuid
      - run: go get -u github.com/guregu/dynamo
      - run: go get -u github.com/jmespath/go-jmespath
      - run: apex version
      - run: apex deploy --env-file env.json --env prod
  deploy-terraform:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - checkout
      - run: cd infrastructure/prod && terraform init
      - run: cd infrastructure/prod && terraform validate
      - run: cd infrastructure/prod && terraform apply -auto-approve

workflows:
  version: 2
  build-deploy:
    jobs:
      - test
      - build:
          filters:
            branches:
              only: master
      - deploy-apex:
          requires:
            - test
            - build
          filters:
            branches:
              only: master
      - deploy-terraform:
          requires:
            - test
            - deploy-apex
